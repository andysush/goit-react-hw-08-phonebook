{"version":3,"file":"static/js/937.0425c49f.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ConatactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Contacts.styled.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import { Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      {<Title>{title}</Title>}\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import styled from '@emotion/styled';\n\nexport const FormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-transform: uppercase;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  width: 200px;\n  height: 20px;\n  font-size: 16px;\n  outline-color: rgb(84, 84, 253);\n`;\n\nexport const AddBtn = styled.button`\n  background-color: rgb(84, 84, 253);\n  color: #fff;\n  outline: none;\n  padding: 5px;\n  border-radius: 5px;\n  border-color: rgb(84, 84, 253);\n  cursor: pointer;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(233, 184, 25);\n    color: rgb(84, 84, 253);\n    scale: 1.2;\n  }\n`;\n","export const selectContact = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import { useState } from 'react';\nimport { FormBox, Label, Input, AddBtn } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContact } from 'redux/selectors';\nimport { addContactThunk } from 'redux/thunks';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error(`No options for ${name}`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name.trim() || !number.trim()) {\n      alert('Please input correct name or number');\n      resetForm();\n      return;\n    }\n    const isExistName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isExistNumber = contacts.find(contact => contact.number === number);\n    if (isExistName) {\n      return alert(`${name} is already in contacts`);\n    }\n    if (isExistNumber) {\n      return alert(`${number} is already in contacts`);\n    }\n    const contact = {\n      id: nanoid(6),\n      name,\n      number,\n    };\n\n    dispatch(addContactThunk(contact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormBox onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Phone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <AddBtn type=\"submit\">Add Contact</AddBtn>\n    </FormBox>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n`;\n\nexport const DeleteBtn = styled.button`\n  background-color: rgb(84, 84, 253);\n  color: #fff;\n  outline: none;\n  padding: 2px 5px;\n  border-radius: 5px;\n  border-color: rgb(84, 84, 253);\n  font-size: 10px;\n  cursor: pointer;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(233, 184, 25);\n    color: rgb(84, 84, 253);\n    scale: 1.2;\n  }\n`;\n","import { Item, DeleteBtn } from './ConatactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact, selectFilter } from 'redux/selectors';\nimport { deleteContactThunk } from 'redux/thunks';\n\nexport const ContactItem = () => {\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  const onClickHandler = id => dispatch(deleteContactThunk(id));\n\n  return (\n    <>\n      {filterContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => {\n              onClickHandler(id);\n            }}\n          >\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { ContactItem } from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  return (\n    <List>\n      <ContactItem />\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n  font-size: 16px;\n  outline-color: rgb(84, 84, 253);\n`;\n","import { useDispatch } from 'react-redux';\nimport { Label, Input } from './SearchForm.styled';\nimport { filter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = ev => {\n    dispatch(filter(ev.currentTarget.value));\n  };\n  return (\n    <Label>\n      Find\n      <Input\n        type=\"text\"\n        placeholder=\"Find contacts...\"\n        onChange={handleFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: #e7ecf2;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 50px 50px;\n`;\n\nexport const Text = styled.span`\n  text-align: center;\n  text-transform: uppercase;\n`;\n","import { Section } from 'components/Section/Section';\nimport Form from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/SearchForm/SearchForm';\nimport { Container, Text } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact, selectError, selectIsLoading } from 'redux/selectors';\nimport { getContactsThunk } from 'redux/thunks';\nimport { useEffect } from 'react';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContact);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phone Book\">\n        <Form></Form>\n      </Section>\n      <Section title=\"Contacts\">\n        {!error && contacts.length === 0 ? (\n          <Text>There is no contacts, yet...</Text>\n        ) : (\n          <>\n            {!error && <Filter />}\n            <ContactList />\n          </>\n        )}\n        {error && <Text>Network Error... Please, try again later...</Text>}\n        {isLoading && <Text>Loading...</Text>}\n      </Section>\n    </Container>\n  );\n}\n"],"names":["Title","styled","Section","title","children","FormBox","Label","Input","AddBtn","selectContact","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","Form","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","Error","resetForm","onSubmit","preventDefault","trim","alert","isExistName","find","contact","toLowerCase","isExistNumber","id","nanoid","addContactThunk","type","onChange","pattern","required","Item","DeleteBtn","ContactItem","filterContacts","includes","map","onClick","deleteContactThunk","onClickHandler","List","ContactList","Filter","placeholder","ev","Container","Text","ContactsPage","useEffect","getContactsThunk","length"],"sourceRoot":""}