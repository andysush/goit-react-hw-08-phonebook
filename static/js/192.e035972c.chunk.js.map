{"version":3,"file":"static/js/192.e035972c.chunk.js","mappings":"4LAEaA,E,QAAQC,EAAAA,GAAH,yH,SCCLC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,iCACG,SAACJ,EAAD,UAAQG,IACRC,IAGN,C,yICRYC,EAAcJ,EAAAA,EAAAA,KAAH,2NAUXK,EAAiBL,EAAAA,EAAAA,IAAH,4EAKdM,EAAeN,EAAAA,EAAAA,MAAH,4CAIZO,EAAcP,EAAAA,EAAAA,EAAH,yHAOXQ,EAAeR,EAAAA,EAAAA,MAAH,oLAWZS,EAAST,EAAAA,EAAAA,OAAH,0e,oBCvCNU,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACrBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EACvBC,EAAc,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,E,6BCajB,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMV,GAAWW,EAAAA,EAAAA,IAAYb,GACvBc,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,MAAM,IAAIC,MAAJ,yBAA4BX,IAEvC,EA8BKY,EAAY,WAChBX,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAAClB,EAAD,CAAa4B,SAlCM,SAAAL,GAEnB,GADAA,EAAMM,kBACDd,EAAKe,SAAWb,EAAOa,OAG1B,OAFAC,MAAM,4CACNJ,IAGF,IAAMK,EAAcxB,EAASyB,MAC3B,SAAAC,GAAO,OAAIA,EAAQnB,KAAKoB,gBAAkBpB,EAAKoB,aAAxC,IAEHC,EAAgB5B,EAASyB,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,SAAWA,CAAvB,IAC3C,GAAIe,EACF,OAAOD,MAAM,GAAD,OAAIhB,EAAJ,4BAEd,GAAIqB,EACF,OAAOL,MAAM,GAAD,OAAId,EAAJ,4BAEd,IAAMiB,EAAU,CACdG,IAAIC,EAAAA,EAAAA,IAAO,GACXvB,KAAAA,EACAE,OAAAA,GAGFG,GAASmB,EAAAA,EAAAA,IAAgBL,IACzBM,EAAAA,GAAAA,QAAc,+BACdb,GACD,EAQC,WACE,SAAC1B,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,CACEqC,YAAY,cACZC,KAAK,OACL3B,KAAK,OACLU,MAAOV,EACP4B,SAAUrB,EACVsB,QAAQ,yHACR9C,MAAM,yIACN+C,UAAQ,UAId,SAAC5C,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,qBACA,SAACC,EAAD,CACEqC,YAAY,WACZC,KAAK,MACL3B,KAAK,SACLU,MAAOR,EACP0B,SAAUrB,EACVsB,QAAQ,yFACR9C,MAAM,+FACN+C,UAAQ,UAId,SAACxC,EAAD,CAAQqC,KAAK,SAAb,2BAGL,CCtGM,I,YAAMI,EAAOlD,EAAAA,EAAAA,GAAH,4OAWJmD,EAAYnD,EAAAA,EAAAA,OAAH,ifCbToD,EAAe,SAAAzC,GAAK,OAAIA,EAAM0C,OAAOA,MAAjB,ECMpBC,EAAc,WACzB,IAAM1C,GAAWW,EAAAA,EAAAA,IAAYb,GACvBc,GAAWC,EAAAA,EAAAA,MACX4B,GAAS9B,EAAAA,EAAAA,IAAY6B,GAErBG,EAAiB3C,EAASyC,QAAO,SAAAf,GAAO,OAC5CA,EAAQnB,KAAKoB,cAAciB,SAASH,EAAOd,cADC,IAK9C,OACE,8BACGgB,EAAeE,KAAI,gBAAGhB,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAClB,UAAC6B,EAAD,YACE,uBAAI/B,KACJ,uBAAIE,KACJ,SAAC8B,EAAD,CACEL,KAAK,SACLY,QAAS,YAVI,SAAAjB,GAAMjB,GAASmC,EAAAA,EAAAA,IAAmBlB,GAAhC,CAWbmB,CAAenB,EAChB,EAJH,sBAHSA,EADO,KAgBzB,EChCYoB,EAAO7D,EAAAA,EAAAA,GAAH,oGCCJ8D,EAAc,WACzB,OACE,SAACD,EAAD,WACE,SAACP,EAAD,KAGL,ECPYS,EAAa/D,EAAAA,EAAAA,KAAH,sNAUVgE,EAAgBhE,EAAAA,EAAAA,IAAH,4EAKbiE,EAAcjE,EAAAA,EAAAA,MAAH,4CAIXkE,EAAalE,EAAAA,EAAAA,EAAH,yHAOVmE,EAAcnE,EAAAA,EAAAA,MAAH,oL,UClBXoE,EAAS,WACpB,IAAM5C,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAACsC,EAAD,WACE,SAACC,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,CACErB,KAAK,OACLD,YAAY,mBACZE,SAXW,SAAAsB,GACnB7C,GAAS6B,EAAAA,EAAAA,GAAOgB,EAAGzC,cAAcC,OAClC,UAeF,E,UCdc,SAASyC,IACtB,IAAM1D,GAAWW,EAAAA,EAAAA,IAAYb,GACvBI,GAAYS,EAAAA,EAAAA,IAAYV,GACxBG,GAAQO,EAAAA,EAAAA,IAAYR,GACpBS,GAAWC,EAAAA,EAAAA,MAMjB,OAJA8C,EAAAA,EAAAA,YAAU,WACR/C,GAASgD,EAAAA,EAAAA,MACV,GAAE,CAAChD,KAGF,UAAC,IAAD,YACE,SAACvB,EAAA,EAAD,CAASC,MAAM,aAAf,UACE,SAACe,EAAD,OAEF,UAAChB,EAAA,EAAD,CAASC,MAAM,WAAf,UACIc,GAA6B,IAApBJ,EAAS6D,QAGlB,iCACIzD,IAAS,SAACoD,EAAD,KACX,SAACN,EAAD,QAJF,SAAC,IAAD,2CAOD9C,GAAS4B,EAAAA,GAAAA,QAAc,+CACvB9B,IAAa,SAAC,IAAD,8BAIrB,C,yGC1CY4D,EAAY1E,EAAAA,EAAAA,IAAH,+LAUT2E,EAAO3E,EAAAA,EAAAA,KAAH,4E","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ConatactListItem.styled.jsx","redux/filter/selectors.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Contacts.js","pages/Pages.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import { Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      {<Title>{title}</Title>}\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 5px solid rgb(84, 84, 253);\n  border-radius: 5px;\n  padding: 20px 40px;\n  background-color: rgb(233, 211, 137);\n  margin-bottom: 30px;\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const ContactLabel = styled.label`\n  font-size: 16px;\n`;\n\nexport const ContactText = styled.p`\n  text-transform: uppercase;\n  font-size: 13px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const ContactInput = styled.input`\n  font-size: 13px;\n  margin-bottom: 10px;\n  border-color: rgb(233, 184, 25);\n\n  :focus {\n    border-color: rgb(84, 84, 253);\n    outline: none;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  background-color: rgb(84, 84, 253);\n  color: #fff;\n  outline: none;\n  padding: 5px;\n  margin: auto;\n  border-radius: 5px;\n  border-color: rgb(84, 84, 253);\n  cursor: pointer;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(233, 184, 25);\n    color: rgb(84, 84, 253);\n    scale: 1.2;\n  }\n`;\n","export const selectContact = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\nimport {\n  AddBtn,\n  ContactForm,\n  ContactWrapper,\n  ContactText,\n  ContactInput,\n  ContactLabel,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { addContactThunk } from 'redux/contacts/thunks';\nimport { toast } from 'react-hot-toast';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error(`No options for ${name}`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name.trim() || !number.trim()) {\n      alert('Please input correct name or number');\n      resetForm();\n      return;\n    }\n    const isExistName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isExistNumber = contacts.find(contact => contact.number === number);\n    if (isExistName) {\n      return alert(`${name} is already in contacts`);\n    }\n    if (isExistNumber) {\n      return alert(`${number} is already in contacts`);\n    }\n    const contact = {\n      id: nanoid(6),\n      name,\n      number,\n    };\n\n    dispatch(addContactThunk(contact));\n    toast.success('Adding User is Successfuly)');\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactForm onSubmit={handleSubmit}>\n      <ContactWrapper>\n        <ContactLabel>\n          <ContactText>Name</ContactText>\n          <ContactInput\n            placeholder=\"Jonny First\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </ContactLabel>\n      </ContactWrapper>\n      <ContactWrapper>\n        <ContactLabel>\n          <ContactText>Phone</ContactText>\n          <ContactInput\n            placeholder=\"12345678\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </ContactLabel>\n      </ContactWrapper>\n      <AddBtn type=\"submit\">Add Contact</AddBtn>\n    </ContactForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: rgb(233, 211, 137);\n  border: 2px solid rgb(84, 84, 253);\n  border-radius: 5px;\n  padding: 10px;\n  gap: 15px;\n`;\n\nexport const DeleteBtn = styled.button`\n  background-color: rgb(84, 84, 253);\n  color: #fff;\n  outline: none;\n  padding: 2px 5px;\n  border-radius: 5px;\n  border-color: rgb(84, 84, 253);\n  font-size: 10px;\n  cursor: pointer;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(233, 184, 25);\n    color: rgb(84, 84, 253);\n    scale: 1.2;\n  }\n`;\n","export const selectFilter = state => state.filter.filter;\n","import { Item, DeleteBtn } from './ConatactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { deleteContactThunk } from 'redux/contacts/thunks';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const ContactItem = () => {\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  const onClickHandler = id => dispatch(deleteContactThunk(id));\n\n  return (\n    <>\n      {filterContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => {\n              onClickHandler(id);\n            }}\n          >\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { ContactItem } from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  return (\n    <List>\n      <ContactItem />\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 5px solid rgb(84, 84, 253);\n  border-radius: 5px;\n  padding: 20px;\n  background-color: rgb(233, 211, 137);\n  margin-bottom: 30px;\n`;\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const SearchLabel = styled.label`\n  font-size: 16px;\n`;\n\nexport const SearchText = styled.p`\n  text-transform: uppercase;\n  font-size: 13px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const SearchInput = styled.input`\n  font-size: 13px;\n  margin-bottom: 10px;\n  border-color: rgb(233, 184, 25);\n\n  :focus {\n    border-color: rgb(84, 84, 253);\n    outline: none;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  SearchLabel,\n  SearchForm,\n  SearchWrapper,\n  SearchText,\n  SearchInput,\n} from './SearchForm.styled';\nimport { filter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = ev => {\n    dispatch(filter(ev.currentTarget.value));\n  };\n  return (\n    <SearchForm>\n      <SearchWrapper>\n        <SearchLabel>\n          <SearchText>Find</SearchText>\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Find contacts...\"\n            onChange={handleFilter}\n          />\n        </SearchLabel>\n      </SearchWrapper>\n    </SearchForm>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport Form from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/SearchForm/SearchForm';\nimport { Container, Text } from './Pages.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContact,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { getContactsThunk } from 'redux/contacts/thunks';\nimport { useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContact);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phone Book\">\n        <Form></Form>\n      </Section>\n      <Section title=\"Contacts\">\n        {!error && contacts.length === 0 ? (\n          <Text>There is no contacts, yet...</Text>\n        ) : (\n          <>\n            {!error && <Filter />}\n            <ContactList />\n          </>\n        )}\n        {error && toast.warning('Network Error... Please, try again later...')}\n        {isLoading && <Text>Loading...</Text>}\n      </Section>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: #e7ecf2;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 50px 50px;\n  height: 100%;\n`;\n\nexport const Text = styled.span`\n  text-align: center;\n  text-transform: uppercase;\n`;\n"],"names":["Title","styled","Section","title","children","ContactForm","ContactWrapper","ContactLabel","ContactText","ContactInput","AddBtn","selectContact","state","contacts","selectIsLoading","isLoading","selectError","error","Form","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","Error","resetForm","onSubmit","preventDefault","trim","alert","isExistName","find","contact","toLowerCase","isExistNumber","id","nanoid","addContactThunk","toast","placeholder","type","onChange","pattern","required","Item","DeleteBtn","selectFilter","filter","ContactItem","filterContacts","includes","map","onClick","deleteContactThunk","onClickHandler","List","ContactList","SearchForm","SearchWrapper","SearchLabel","SearchText","SearchInput","Filter","ev","ContactsPage","useEffect","getContactsThunk","length","Container","Text"],"sourceRoot":""}